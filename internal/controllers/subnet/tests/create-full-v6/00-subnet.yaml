apiVersion: openstack.k-orc.cloud/v1alpha1
kind: Network
metadata:
  name: create-full-v6
spec:
  cloudCredentialsRef:
    cloudName: openstack
    secretName: openstack-clouds
  managementPolicy: managed
  resource:
    name: create-full-v6
---
apiVersion: openstack.k-orc.cloud/v1alpha1
kind: Network
metadata:
  name: create-full-v6-gateway
spec:
  cloudCredentialsRef:
    cloudName: openstack-admin
    secretName: openstack-clouds
  managementPolicy: managed
  resource:
    external: true
---
apiVersion: openstack.k-orc.cloud/v1alpha1
kind: Subnet
metadata:
  name: create-full-v6-gateway
spec:
  cloudCredentialsRef:
    cloudName: openstack
    secretName: openstack-clouds
  managementPolicy: managed
  networkRef: create-full-v6-gateway
  resource:
    ipVersion: 6
    cidr: fc00:8::/64
---
apiVersion: openstack.k-orc.cloud/v1alpha1
kind: Router
metadata:
  name: create-full-v6
spec:
  cloudCredentialsRef:
    cloudName: openstack
    secretName: openstack-clouds
  managementPolicy: managed
  resource:
    externalGateways:
    - networkRef: create-full-v6-gateway
---
apiVersion: openstack.k-orc.cloud/v1alpha1
kind: Subnet
metadata:
  name: create-full-v6
spec:
  cloudCredentialsRef:
    cloudName: openstack
    secretName: openstack-clouds
  managementPolicy: managed
  networkRef: create-full-v6
  resource:
    name: create-full-v6-override
    description: Subnet from "create full v6" test
    tags:
      - tag1
      - tag2
    ipVersion: 6
    cidr: fc00:2::/64
    allocationPools:
      - start: "fc00:2:0:0:1::"
        end: "fc00:2:0:0:1:ffff:ffff:ffff"
      # NOTE: it works to add more than one allocation pool, but we fail to
      # reliably validate it with kuttl
      # - start: "fc00:2:0:0:2::"
      #   end: "fc00:2:0:0:2:ffff:ffff:ffff"
    gateway:
    dnsNameservers:
      - 2606:4700:4700::1111
      - 2001:4860:4860::8888
    dnsPublishFixedIP: true
    hostRoutes:
      - destination: fc00:3::/64
        nextHop: "fc00:4::1"
      - destination: fc00:5::/64
        nextHop: "fc00:6::1"
    # NOTE: enable_dhcp must be enabled for setting ipv6_ra_mode or ipv6_address_mode
    enableDHCP: true
    # NOTE: when both ipv6_ra_mode and ipv6_address_mode are set they must be identical
    ipv6:
      addressMode: slaac
      raMode: slaac
    routerRef: create-full-v6
